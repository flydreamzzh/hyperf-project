<?php

declare(strict_types=1);
/**
 * This file is part of Hyperf.
 *
 * @link     https://www.hyperf.io
 * @document https://hyperf.wiki
 * @contact  group@hyperf.io
 * @license  https://github.com/hyperf/hyperf/blob/master/LICENSE
 */
namespace App\Core\Handler;

use Monolog\Handler\StreamHandler;
use Monolog\Logger;

/**
 * LogFileHandler
 * 日志处理，存储文件
 * 将info、warning、notic等类型存储一个文件，debug类型存储一个文件，error类型存储一个文件.
 */
class LogFileHandler extends StreamHandler
{
    /**
     * @var string 渠道类型
     */
    protected $channel;

    /**
     * @var string 带有正则的路由
     */
    private $formatUrl;

    /**
     * LogFileHandler constructor.
     * @param $stream
     * @param int $level
     * @param bool $bubble
     * @param null $filePermission
     * @param bool $useLocking
     * @param string $channel 渠道类型 sql，default
     * @throws \Exception
     */
    public function __construct($stream, $level = Logger::DEBUG, $bubble = true, $filePermission = null, $useLocking = false, $channel = 'default')
    {
        $this->channel = $channel;
        $this->formatUrl = $stream;
        parent::__construct($stream, $level, $bubble, $filePermission, $useLocking);
    }

    /**
     * handle
     * 改写父类方法，增加渠道类型判断
     * Time：下午7:16.
     * @param array $record
     * @return bool
     */
    public function handle(array $record): bool
    {
        if ($record['channel'] != $this->channel) {
            return false;
        }

        if (! $this->isHandling($record)) {
            return false;
        }
        $record = $this->processRecord($record);

        $record['formatted'] = $this->getFormatter()->format($record);

        $this->write($record);

        return $this->bubble === false;
    }

    /**
     * isHandling
     * 重写该方法，作用改变日志的存储文件的方式。
     * 将debug,error，单独存储，其它的按着原来规则.
     * @param array $record
     * @return bool
     */
    public function isHandling(array $record): bool
    {
        if ($record['level'] == Logger::DEBUG) {
            return $record['level'] == $this->level;
        }
        if (in_array($record['level'], [Logger::ERROR, Logger::CRITICAL, Logger::ALERT, Logger::EMERGENCY])) {
            return Logger::ERROR <= $this->level && Logger::EMERGENCY >= $this->level;
        }
        return Logger::INFO <= $this->level && Logger::WARNING >= $this->level;
    }

    /**
     * 重写日志文件路径.
     * @param array $record
     */
    protected function write(array $record): void
    {
        $path = str_replace('[datetime]', date('Y-m-d'), $this->formatUrl);
        if ($path != $this->url) {
            if (is_resource($this->stream)) {
                $this->close();
            }
            $this->url = $path;
        } else {
            if (is_resource($this->stream) && ! file_exists($this->url)) {
                $this->close();
            }
        }
        parent::write($record); // TODO: Change the autogenerated stub
    }
}
